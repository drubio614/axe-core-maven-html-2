name: Tests # This workflow is named "Tests"

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [21] # <--- Changed to only run with Java 21 for consistency
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK ${{ matrix.java }} and Maven
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: maven # This handles Maven caching

      - name: Verify Java Version
        run: java -version
      - name: Verify Maven Version
        run: mvn --version

      - name: Create Maven Toolchains file # NEW STEP: Creates the toolchains.xml on the runner
        run: |
          mkdir -p ~/.m2
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > ~/.m2/toolchains.xml
          echo "<toolchains>" >> ~/.m2/toolchains.xml
          echo "  <toolchain>" >> ~/.m2/toolchains.xml
          echo "    <type>jdk</type>" >> ~/.m2/toolchains.xml
          echo "    <provides>" >> ~/.m2/toolchains.xml
          echo "      <version>21</version>" >> ~/.m2/toolchains.xml
          echo "      <vendor>temurin</vendor>" >> ~/.m2/toolchains.xml
          echo "    </provides>" >> ~/.m2/toolchains.xml
          echo "    <configuration>" >> ~/.m2/toolchains.xml
          echo "      <jdkHome>${JAVA_HOME}</jdkHome>" >> ~/.m2/toolchains.xml
          echo "    </configuration>" >> ~/.m2/toolchains.xml
          echo "  </toolchain>" >> ~/.m2/toolchains.xml
          echo "</toolchains>" >> ~/.m2/toolchains.xml
        shell: bash

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: "**/node_modules"
          key: npm-cache-v1-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-v1-${{ runner.os }}-
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        id: maven-cache
        with:
          path: ~/.m2/repository
          key: maven-cache-v1-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}-${{ matrix.java }}
          restore-keys: |
            maven-cache-v1-${{ runner.os }}-${{ matrix.java }}

      - name: Install Maven dependencies
        # https://github.com/actions/cache#skipping-steps-based-on-cache-hit
        if: steps.maven-cache.outputs.cache-hit != 'true'
        # Explicitly pass toolchains.xml
        run: mvn clean install -DskipTests -t ~/.m2/toolchains.xml
      - name: Install NPM dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm ci &&
          npm --prefix=selenium ci &&
          npm --prefix=playwright ci

  license-check:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 21 and Maven # Need to set up JDK and Maven again for dependent jobs
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: "temurin"
          cache: maven
      - name: Create Maven Toolchains file # Recreate toolchains.xml for this job
        run: |
          mkdir -p ~/.m2
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > ~/.m2/toolchains.xml
          echo "<toolchains>" >> ~/.m2/toolchains.xml
          echo "  <toolchain>" >> ~/.m2/toolchains.xml
          echo "    <type>jdk</type>" >> ~/.m2/toolchains.xml
          echo "    <provides>" >> ~/.m2/toolchains.xml
          echo "      <version>21</version>" >> ~/.m2/toolchains.xml
          echo "      <vendor>temurin</vendor>" >> ~/.m2/toolchains.xml
          echo "    </provides>" >> ~/.m2/toolchains.xml
          echo "    <configuration>" >> ~/.m2/toolchains.xml
          echo "      <jdkHome>${JAVA_HOME}</jdkHome>" >> ~/.m2/toolchains.xml
          echo "    </configuration>" >> ~/.m2/toolchains.xml
          echo "  </toolchain>" >> ~/.m2/toolchains.xml
          echo "</toolchains>" >> ~/.m2/toolchains.xml
        shell: bash
      - name: Maven compile licenses
        # Explicitly pass toolchains.xml
        run: mvn compile license:add-third-party -t ~/.m2/toolchains.xml
      - name: Check Selenium licenses
        run: node scripts/license-check.js selenium/target/generated-sources/license/THIRD-PARTY.txt
      - name: Check Playwright licenses
        run: node scripts/license-check.js playwright/target/generated-sources/license/THIRD-PARTY.txt

  playwright-tests:
    needs: [license-check, build]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        java: [21] # <--- Changed to only run with Java 21
    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK ${{ matrix.java }} and Maven # Need to set up JDK and Maven again for dependent jobs
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: maven
      - name: Create Maven Toolchains file # Recreate toolchains.xml for this job
        run: |
          mkdir -p ~/.m2
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > ~/.m2/toolchains.xml
          echo "<toolchains>" >> ~/.m2/toolchains.xml
          echo "  <toolchain>" >> ~/.m2/toolchains.xml
          echo "    <type>jdk</type>" >> ~/.m2/toolchains.xml
          echo "    <provides>" >> ~/.m2/toolchains.xml
          echo "      <version>21</version>" >> ~/.m2/toolchains.xml
          echo "      <vendor>temurin</vendor>" >> ~/.m2/toolchains.xml
          echo "    </provides>" >> ~/.m2/toolchains.xml
          echo "    <configuration>" >> ~/.m2/toolchains.xml
          echo "      <jdkHome>${JAVA_HOME}</jdkHome>" >> ~/.m2/toolchains.xml
          echo "    </configuration>" >> ~/.m2/toolchains.xml
          echo "  </toolchain>" >> ~/.m2/toolchains.xml
          echo "</toolchains>" >> ~/.m2/toolchains.xml
        shell: bash
      - uses: actions/cache@v4
        name: Restore npm cache
        id: npm-cache
        with:
          path: "**/node_modules"
          key: npm-cache-v1-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-v1-${{ runner.os }}-
      - uses: actions/cache@v4
        name: Restore Maven cache
        id: maven-cache
        with:
          path: ~/.m2/repository
          key: maven-cache-v1-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}-${{ matrix.java }}
          restore-keys: |
            maven-cache-v1-${{ runner.os }}-${{ matrix.java }}
      - name: Start fixture server
        run: npm --prefix=playwright start &
      - name: Run Playwright tests
        # Explicitly pass toolchains.xml
        run: mvn test -q -pl playwright -t ~/.m2/toolchains.xml

  selenium-tests:
    needs: [license-check, build]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        java: [21] # <--- Changed to only run with Java 21
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
      - name: Set up JDK ${{ matrix.java }} and Maven # Need to set up JDK and Maven again for dependent jobs
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: maven
      - name: Create Maven Toolchains file # Recreate toolchains.xml for this job
        run: |
          mkdir -p ~/.m2
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > ~/.m2/toolchains.xml
          echo "<toolchains>" >> ~/.m2/toolchains.xml
          echo "  <toolchain>" >> ~/.m2/toolchains.xml
          echo "    <type>jdk</type>" >> ~/.m2/toolchains.xml
          echo "    <provides>" >> ~/.m2/toolchains.xml
          echo "      <version>21</version>" >> ~/.m2/toolchains.xml
          echo "      <vendor>temurin</vendor>" >> ~/.m2/toolchains.xml
          echo "    </provides>" >> ~/.m2/toolchains.xml
          echo "    <configuration>" >> ~/.m2/toolchains.xml
          echo "      <jdkHome>${JAVA_HOME}</jdkHome>" >> ~/.m2/toolchains.xml
          echo "    </configuration>" >> ~/.m2/toolchains.xml
          echo "  </toolchain>" >> ~/.m2/toolchains.xml
          echo "</toolchains>" >> ~/.m2/toolchains.xml
        shell: bash
      - uses: actions/cache@v4
        name: Restore npm cache
        id: npm-cache
        with:
          path: "**/node_modules"
          key: npm-cache-v1-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-v1-${{ runner.os }}-
      - uses: actions/cache@v4
        name: Restore Maven cache
        id: maven-cache
        with:
          path: ~/.m2/repository
          key: maven-cache-v1-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}-${{ matrix.java }}
          restore-keys: |
            maven-cache-v1-${{ runner.os }}-${{ matrix.java }}
      - name: Start fixture server
        run: python -m http.server 8001 &
        working-directory: selenium/node_modules/axe-test-fixtures/fixtures
      - name: Run Selenium tests
        # Explicitly pass toolchains.xml
        run: mvn test -q -pl selenium -t ~/.m2/toolchains.xml
